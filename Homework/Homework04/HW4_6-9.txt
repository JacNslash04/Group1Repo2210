Question #6

(assumes that a1, and a2 are values from port 100, returns the greatest common factor)

		JMP	start	; JMP to start
	a1:	x		; x = input from port 100
	a2:	y		; y = other input from port 100
	count:	a1		; variable to be returned as the greatest common factor
	start:	LOAD	a1	; load a1 into the accumulator
	temp:	MOD	count	; temp is a1 % count
		LOAD	temp	; load temp into the aaccumulator
		JZ	jump	; if temp = 0, JMP to jump
		LOAD	count	; if temp != 0, load count into the accumulator
		SUB	1	; subtract count by 1
		JMP	start	; JMP to  start
	jump:	LOAD	a2	; load a2 into the accumulator
	temp2:	MOD	count	; temp2 is a2 % count
		LOAD	temp2	; load temp2 into the accumulator
		JZ	jump2	; if temp2 = 0, JMP to jump2
		LOAD	count	; if temp2 != 0, load count into the accumulator
		SUB	1	; subtract count by 1
		JMP	start	; JMP to start
	jump2:	LOAD	count	; load count into the accumulaator
		WRITE	200	; Writes accumulator to port 200
	end:	JUMP	end	; "stops" the program

Question #7

(swaps the location of whatever is in the accumulator with memory address 0x30AA)
		JMP	start	; JMP to start
	start:	WRITE	100	; writes from accumulator to port 0x64
		LOAD	12458	; loads into the accumulator from port 0x30AA
		STORE	200	; stores accumulator to port 0xC8
		LOAD	100	; loads into the accumulator from port 0x64
		STORE	12458	; stores from the accumulator to port 0x30AA
		LOAD	200	; loads into the accumulator from port 0xC8
	end:	JUMP	end	; "stops" the program

Question #8

(jumps to memory address 0x837BBE1 if accumulator >= 0)

		JMP	start	; JMP to start
	loc:	137870305	; loc = 0x837BBE1
	start:	JGZ	jump	; if accumulator > 0, JMP to jump
		JZ	jump	; if accumulator = 0, JMP to jump
	jump:	JMP	loc	; JMP to loc


Question #9

pt1: At a high level, the final r8 becomes the original r9.
pt2: Going bit by bit in r8 and r9, consider the 3 (technically 4) cases. 
- Case 1, a bit in r8 is 1 and r9 is 1, then r8 is flipped to 0, then r9 stays 1, and r8 is then flipped back to 1.
- Case 2 (same as r8=1 & r9=0), a bit in r8 is 0 and r9 is 1, then r8 stays 1, then r9 flips to 0, and r8 stays 1.
- case 3, a bit in r8 is 0 and r9 is 0, then r8 stays 0, r9 stays 0, and r8 stays 0 again.
		
